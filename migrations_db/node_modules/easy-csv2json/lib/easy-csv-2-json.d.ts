import { Cell } from './cell';
import { EasyCSV2JSONInput } from './easy-csv-2-json-input';
export declare class EasyCSV2JSON {
    private $table;
    private $options;
    constructor();
    /**
     * Transform an CSV file to JSON object
     *
     * @static
     * @param {*} $input
     * @returns {Promise<any>}
     * @memberof EasyCSV2JSON
     */
    static convert($input: EasyCSV2JSONInput): Promise<any>;
    /**
     * Transform an CSV file to JSON object with metadata
     *
     * @param {EasyCSV2JSONInput} $input Input parameters containing the array buffer, charSep and headers indicator
     * @returns {Promise<[Array<Cell>]>} A table containing the data
     * @memberof EasyCSV2JSON
     */
    init($input: EasyCSV2JSONInput): Promise<void>;
    convert(): Promise<any>;
    getTable(): Promise<[Array<Cell>]>;
    val(cell: string): Promise<any>;
    setVal(cell: string, value: any): Promise<Cell>;
    cell(cell: string): Promise<Cell>;
    applyFormula(cell: string, fn: (value: any, $this: EasyCSV2JSON) => Promise<any>): Promise<Cell>;
    filterFn(column: string, fn: (value: any) => boolean, options?: {
        newRowNumbers: boolean;
    }): Promise<EasyCSV2JSON>;
    filterVal(column: string, value: any, options?: {
        newRowNumbers: boolean;
    }): Promise<EasyCSV2JSON>;
    private static getColum;
    private emptyTable;
    static inferType(value: string): Promise<Cell>;
}
